{"version":3,"sources":["webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/localforage/dist/localforage.js","webpack:///./node_modules/localbase/localbase/api/selectors/collection.js","webpack:///./node_modules/localbase/localbase/api/selectors/doc.js","webpack:///./node_modules/localbase/localbase/api/filters/orderBy.js","webpack:///./node_modules/localbase/localbase/api/filters/limit.js","webpack:///./node_modules/localbase/localbase/utils/isSubset.js","webpack:///./node_modules/localbase/localbase/utils/logger.js","webpack:///./node_modules/localbase/localbase/api-utils/reset.js","webpack:///./node_modules/localbase/localbase/api-utils/selectionLevel.js","webpack:///./node_modules/localbase/localbase/api-utils/showUserErrors.js","webpack:///./node_modules/localbase/localbase/api/actions/get.js","webpack:///./node_modules/localbase/localbase/api-utils/success.js","webpack:///./node_modules/localbase/localbase/api-utils/error.js","webpack:///./node_modules/localbase/localbase/api/actions/add.js","webpack:///./node_modules/localbase/localbase/utils/updateObject.js","webpack:///./node_modules/localbase/localbase/api/actions/update.js","webpack:///./node_modules/localbase/localbase/api/actions/set.js","webpack:///./node_modules/localbase/localbase/api/actions/delete.js","webpack:///./node_modules/localbase/localbase/localbase.js","webpack:///./node_modules/localbase/index.js","webpack:///./node_modules/merge-images/dist/index.es2015.js","webpack:///./node_modules/isarray/index.js"],"names":["exports","nextTick","fn","args","Array","prototype","slice","call","arguments","shift","setTimeout","apply","platform","arch","execPath","title","pid","browser","env","argv","binding","name","Error","path","cwd","chdir","dir","resolve","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","f","module","t","n","r","o","u","a","require","code","l","length","1","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","immediate","task","push","this","self","window","2","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","reject","getThen","obj","then","thenable","onError","onSuccess","tryToUnwrap","result","tryCatch","status","out","reason","all","iterable","Object","toString","values","resolved","allResolver","resolveFromAll","outValue","error","race","response","constructor","3","4","_typeof","Symbol","iterator","_classCallCheck","instance","Constructor","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb","isIndexedDBValid","open","isSafari","openDatabase","test","navigator","userAgent","hasFetch","fetch","indexOf","IDBKeyRange","createBlob","parts","properties","Blob","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupportWithoutCaching","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","parseInt","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","db","close","dbArgs","version","openreq","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","onversionchange","target","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","arrayBuff","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_tryReconnect","forages","forage","createTransaction","mode","retries","undefined","tx","_initStorage","options","ready","initPromises","ignoreErrors","j","_defaultConfig","k","getItem","store","req","get","iterate","openCursor","iterationNumber","cursor","setItem","blobSupport","removeItem","clear","count","advanced","openKeyCursor","advance","keys","dropInstance","currentConfig","config","isCurrentDb","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","_forage","asyncStorage","_driver","_support","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","bytes","bufferToString","base64String","substring","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","localforageSerializer","createDbTable","executeSql","_initStorage$1","dbInfoPromise","description","size","serializer","tryExecuteSql","sqlStatement","SYNTAX_ERR","results","rows","getItem$1","item","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","operations","webSQLStorage","isLocalStorageValid","localStorage","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","x","y","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","isRequired","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js","collectionName","userErrors","dbName","lf","doc","docSelectionCriteria","orderBy","property","direction","orderByProperty","orderByDirection","limit","limitBy","Number","isInteger","isSubset","superObj","subObj","every","ele","logger","baseStyle","colors","message","secondary","selectionLevel","level","showUserErrors","getCollection","collection","collectionItem","logMessage","sort","b","localeCompare","reverse","splice","getDocument","getDocumentByCriteria","getDocumentByKey","catch","currentSelectionLevel","success","UUID","add","keyProvided","generate","updateObject","prop","val","update","docUpdates","updateDocumentByCriteria","docsToUpdate","newDocument","forEach","docToUpdate","index","updateDocumentByKey","set","setCollection","docsWithoutKey","setDocument","setDocumentByCriteria","docsToSet","docToSet","setDocumentByKey","deleteIt","database","deleteCollection","addToDeleteCollectionQueue","deleteCollectionQueue","runDeleteCollectionQueue","running","deleteNextCollectionFromQueue","collectionToDelete","deleteDocument","deleteDocumentByCriteria","keysForDeletion","deleteDocumentByKey","debug","bind","delete","defaultOptions","format","quality","width","height","Canvas","crossOrigin","mergeImages","sources","assign","canvas","Image","images","map","source","src","img","ctx","getContext","getSize","dim","max","image","globalAlpha","opacity","drawImage","toDataURL","progressive","jpeg"],"mappings":"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","file":"js/chunk-vendors~7d359b94.7b36c0bc.js","sourcesContent":["exports.nextTick = function nextTick(fn) {\n    var args = Array.prototype.slice.call(arguments);\n    args.shift();\n    setTimeout(function () {\n        fn.apply(null, args);\n    }, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","import localForage from \"localforage\";\n\nexport default function collection(collectionName) {\n  if (!collectionName) {\n    this.userErrors.push('No collection name specified in collection() method.')\n    return this\n  }\n  else if (typeof collectionName !== 'string') {\n    this.userErrors.push('Collection name in collection() method must be a string and not an object, number or boolean.')\n    return this\n  }\n  else {\n    this.collectionName = collectionName\n\n    let dbName = this.dbName\n\n    // if we've not created a localForage instance \n    // for this collection, create one\n    if (!(collectionName in this.lf)) {\n      this.lf[collectionName] = localForage.createInstance({\n        driver      : localForage.INDEXEDDB,\n        name        : dbName,\n        storeName   : collectionName\n      })\n    }\n    return this\n  }\n\n}","export default function doc(docSelectionCriteria) {\n  if (!docSelectionCriteria) {\n    this.userErrors.push('No document criteria specified in doc() method. Use a string (with a key) or an object (with criteria) e.g. { id: 1 }')\n  }\n  else if (typeof docSelectionCriteria !== 'string' && typeof docSelectionCriteria !== 'object') {\n    this.userErrors.push('Document criteria specified in doc() method must not be a number or boolean. Use a string (with a key) or an object (with criteria) e.g. { id: 1 }')\n  }\n  else {\n    this.docSelectionCriteria = docSelectionCriteria\n  }\n  return this\n}","export default function orderBy(property, direction) {\n  if (!property) {\n    this.userErrors.push(\"No field name specified in orderBy() method. Use a string e.g. 'name'\")\n  }\n  else if (typeof property !== 'string') {\n    this.userErrors.push(\"First parameter in orderBy() method must be a string (a field name) e.g. 'name'\")\n  }\n  else {\n    this.orderByProperty = property\n  }\n  if (direction) {\n    if (direction !== 'asc' && direction !== 'desc') {\n      this.userErrors.push(\"Second parameter in orderBy() method must be a string set to 'asc' or 'desc'.\")\n    }\n    else {\n      this.orderByDirection = direction\n    }\n  }\n  return this\n}","export default function limit(limitBy) {\n  if (!limitBy) {\n    this.userErrors.push(\"No integer specified in limit() method.\")\n  }\n  else if (!Number.isInteger(limitBy)) {\n    this.userErrors.push(\"Limit parameter in limit() method must be an integer (e.g. 3) and not a float, boolean, string or object.\")\n  }\n  else {\n    this.limitBy = limitBy\n  }\n  return this\n}","export default function isSubset(superObj, subObj) {\n  return Object.keys(subObj).every(ele => {\n      if (typeof subObj[ele] == 'object') {\n          return isSubset(superObj[ele], subObj[ele]);\n      }\n      return subObj[ele] === superObj[ele]\n  });\n}","let logger = {\n  baseStyle: `\n    padding: 2px 5px;\n    background-color: #124F5C;\n    border-radius: 4px;\n    color: white; \n  `,\n  colors: {\n    log: '#124F5C',\n    error: '#ed2939',\n    warn: '#f39c12'\n  },\n  log(message, secondary) {\n    if (process.env.NODE_ENV == 'development' && this.config.debug) {\n      let style = logger.baseStyle + `background-color: ${ logger.colors.log }`\n      if (secondary) {\n        console.log('%clocalbase', style, message, secondary)\n      }\n      else {\n        console.log('%clocalbase', style, message)\n      }\n    }\n  },\n  error(message, secondary) {\n    if (process.env.NODE_ENV == 'development' && this.config.debug) {\n      let style = logger.baseStyle + `background-color: ${ logger.colors.error }`\n      console.error('%clocalbase', style, message)\n    }\n  },  \n  warn(message, secondary) {\n    if (process.env.NODE_ENV == 'development' && this.config.debug) {\n      let style = logger.baseStyle + `background-color: ${ logger.colors.warn }`\n      console.warn('%clocalbase', style, message)\n    }\n  }\n}\n\nexport default logger","export default function reset() {\n  this.collectionName = null\n  this.orderByProperty = null\n  this.orderByDirection = null\n  this.limitBy = null\n  this.docSelectionCriteria = null\n  this.userErrors = []\n}","export default function selectionLevel() {\n  let level\n  if (!this.collectionName && !this.docSelectionCriteria) level = 'db'\n  else if (this.collectionName && !this.docSelectionCriteria) level = 'collection'\n  else if (this.collectionName && this.docSelectionCriteria) level = 'doc'\n  return level\n}","import logger from '../utils/logger'\nimport reset from './reset'\n\nexport default function showUserErrors() {\n  for (let i = 0; i < this.userErrors.length; i++) {\n    logger.error.call(this, this.userErrors[i])\n  }\n  reset.call(this)\n}","import isSubset from '../../utils/isSubset'\nimport logger from \"../../utils/logger\"\nimport reset from '../../api-utils/reset'\nimport selectionLevel from '../../api-utils/selectionLevel'\nimport showUserErrors from '../../api-utils/showUserErrors'\n\nexport default function get(options = { keys: false }) {\n\n  // get collection\n  this.getCollection = () => {\n    let collectionName = this.collectionName\n    let orderByProperty = this.orderByProperty\n    let orderByDirection = this.orderByDirection\n    let limitBy = this.limitBy\n\n    let collection = []\n    return this.lf[collectionName].iterate((value, key) => {\n      let collectionItem = {}\n      if (!options.keys) {\n        collectionItem = value\n      }\n      else {\n        collectionItem = {\n          key: key,\n          data: value\n        }\n      }\n      collection.push(collectionItem)\n    }).then(() => {\n      let logMessage = `Got \"${ collectionName }\" collection`\n      // orderBy\n      if (orderByProperty) {\n        logMessage += `, ordered by \"${ orderByProperty }\"`\n        if (!options.keys) {\n          collection.sort((a, b) => {\n            return a[orderByProperty].toString().localeCompare(b[orderByProperty].toString())\n          })\n        }\n        else {\n          collection.sort((a, b) => {\n            return a.data[orderByProperty].toString().localeCompare(b.data[orderByProperty].toString())\n          })\n        }\n      }\n      if (orderByDirection == 'desc') {\n        logMessage += ` (descending)`\n        collection.reverse()\n      }\n      // limit\n      if (limitBy) {\n        logMessage += `, limited to ${ limitBy }`\n        collection = collection.splice(0,limitBy)\n      }\n      logMessage += `:`\n      logger.log.call(this, logMessage, collection)\n      reset.call(this)\n      return collection\n    })\n  }\n\n  // get document\n  this.getDocument = () => {\n    let collectionName = this.collectionName\n    let docSelectionCriteria = this.docSelectionCriteria\n\n    let collection = []\n    let document = {}\n\n    // get document by criteria\n    this.getDocumentByCriteria = () => {\n      return this.lf[collectionName].iterate((value, key) => {\n        if (isSubset(value, docSelectionCriteria)) {\n          collection.push(value)\n        }\n      }).then(() => {\n        if (!collection.length) {\n          logger.error.call(this, `Could not find Document in \"${ collectionName }\" collection with criteria: ${ JSON.stringify(docSelectionCriteria)}`)\n        }\n        else {\n          document = collection[0]\n          logger.log.call(this, `Got Document with ${ JSON.stringify(docSelectionCriteria) }:`, document)\n          reset.call(this)\n          return document\n        }\n      })\n    }\n\n    // get document by key\n    this.getDocumentByKey = () => {\n      return this.lf[collectionName].getItem(docSelectionCriteria).then((value) => {\n        document = value\n        if (document) {\n          logger.log.call(this, `Got Document with key ${ JSON.stringify(docSelectionCriteria) }:`, document)\n        }\n        else {\n          logger.error.call(this, `Could not find Document in \"${ collectionName }\" collection with Key: ${ JSON.stringify(docSelectionCriteria)}`)\n        }\n        reset.call(this)\n        return document\n      }).catch(err => {\n        logger.error.call(this, `Could not find Document in \"${ collectionName }\" collection with Key: ${ JSON.stringify(docSelectionCriteria)}`)\n        reset.call(this)\n      });\n    }\n\n    if (typeof docSelectionCriteria == 'object') {\n      return this.getDocumentByCriteria()\n    }\n    else {\n      return this.getDocumentByKey()\n    }\n  }\n\n  // check for user errors\n  if (!(typeof options == 'object' && options instanceof Array == false)) {\n    this.userErrors.push('Data passed to .get() must be an object. Not an array, string, number or boolean. The object must contain a \"keys\" property set to true or false, e.g. { keys: true }')\n  }\n  else {\n    if (!options.hasOwnProperty('keys')) {\n      this.userErrors.push('Object passed to get() method must contain a \"keys\" property set to boolean true or false, e.g. { keys: true }')\n    }\n    else {\n      if (typeof options.keys !== 'boolean') {\n        this.userErrors.push('Property \"keys\" passed into get() method must be assigned a boolean value (true or false). Not a string or integer.')\n      }\n    }\n  }\n\n  if (!this.userErrors.length) {\n    let currentSelectionLevel = selectionLevel.call(this)\n\n    if (currentSelectionLevel == 'collection') {\n      return this.getCollection()\n    }\n    else if (currentSelectionLevel == 'doc') {\n      return this.getDocument()\n    }\n  }\n  else {\n    showUserErrors.call(this)\n    return null\n  }\n\n}","import logger from '../utils/logger'\nimport reset from '../api-utils/reset'\n\nexport default function success(message, data) {\n  reset.call(this)\n  logger.log.call(this, message, data)\n  return  {\n    success: true,\n    message: message,\n    data: data\n  }\n}\n","import logger from '../utils/logger'\nimport reset from '../api-utils/reset'\n\nexport default function error(message) {\n  reset.call(this)\n  logger.error.call(this, message)\n  return (`Error: ${ message }`)\n}","let UUID = require('ordered-uuid')\nimport success from '../../api-utils/success'\nimport error from '../../api-utils/error'\nimport showUserErrors from '../../api-utils/showUserErrors'\n\nexport default function add(data, keyProvided) {\n  // check for user errors\n  if (!data) {\n    this.userErrors.push('No data specified in add() method. You must use an object, e.g { id: 1, name: \"Bill\", age: 47 }')\n  }\n  else if (!(typeof data == 'object' && data instanceof Array == false)) {\n    this.userErrors.push('Data passed to .add() must be an object. Not an array, string, number or boolean.')\n  }\n\n  // no user errors, do the add\n  if (!this.userErrors.length) {\n    let collectionName = this.collectionName\n  \n    return new Promise((resolve, reject) => {\n      let key = null\n\n      // if no key provided, generate random, ordered key\n      if (!keyProvided) {\n        key = UUID.generate()\n      }\n      else {\n        key = keyProvided\n      }\n\n      return this.lf[collectionName].setItem(key, data).then(() => {\n        resolve(\n          success.call(\n            this,\n            `Document added to \"${ collectionName }\" collection.`,\n            { key, data }\n          )\n        )\n      }).catch(err => {\n        reject(\n          error.call(\n            this,\n            `Could not add Document to ${ collectionName } collection.`\n          )\n        )\n      })\n    })\n  }\n  else {\n    showUserErrors.call(this)\n  }\n}","export default function updateObject(obj/*, …*/) {\n  for (var i=1; i<arguments.length; i++) {\n      for (var prop in arguments[i]) {\n          var val = arguments[i][prop];\n          // if (typeof val == \"object\") // this also applies to arrays or null!\n          //   updateObject(obj[prop], val);\n          // else\n          //    obj[prop] = val;\n          obj[prop] = val;\n      }\n  }\n  return obj;\n}","import logger from '../../utils/logger'\nimport isSubset from '../../utils/isSubset'\nimport updateObject from '../../utils/updateObject'\nimport success from '../../api-utils/success'\nimport error from '../../api-utils/error'\nimport showUserErrors from '../../api-utils/showUserErrors'\n\nexport default function update(docUpdates) {\n  let collectionName = this.collectionName\n  let docSelectionCriteria = this.docSelectionCriteria\n\n  return new Promise((resolve, reject) => {\n\n    // update document by criteria\n    this.updateDocumentByCriteria = () => {\n      let docsToUpdate = []\n      this.lf[collectionName].iterate((value, key) => {\n        if (isSubset(value, docSelectionCriteria)) {\n          let newDocument = updateObject(value, docUpdates)\n          docsToUpdate.push({ key, newDocument })\n        }\n      }).then(() => {\n        if (!docsToUpdate.length) {\n          reject(\n            error.call(\n              this,\n              `No Documents found in ${ collectionName } Collection with criteria ${ JSON.stringify(docSelectionCriteria) }.`\n            )\n          )\n        }\n        if (docsToUpdate.length > 1) {\n          logger.warn.call(this, `Multiple documents (${ docsToUpdate.length }) with ${ JSON.stringify(docSelectionCriteria) } found for updating.`)\n        }\n      }).then(() => {\n        docsToUpdate.forEach((docToUpdate, index) => {\n          this.lf[collectionName].setItem(docToUpdate.key, docToUpdate.newDocument).then(value => {\n\n            if (index === (docsToUpdate.length - 1)) {\n              resolve(\n                success.call(\n                  this,\n                  `${ docsToUpdate.length } Document${ docsToUpdate.length > 1 ? 's' : '' } in \"${ collectionName }\" collection with ${ JSON.stringify(docSelectionCriteria) } updated.`,\n                  docUpdates\n                )\n              )\n            }\n\n          }).catch(err => {\n            reject(\n              error.call(\n                this,\n                `Could not update ${ docsToUpdate.length } Documents in ${ collectionName } Collection.`\n              )\n            )\n          })\n        })\n      })\n    }\n  \n    // update document by key\n    this.updateDocumentByKey = () => {\n      let newDocument = {}\n      this.lf[collectionName].getItem(docSelectionCriteria).then(value => {\n        newDocument = updateObject(value, docUpdates)\n        this.lf[collectionName].setItem(docSelectionCriteria, newDocument)\n        resolve(\n          success.call(\n            this,\n            `Document in \"${ collectionName }\" collection with key ${ JSON.stringify(docSelectionCriteria) } updated.`,\n            newDocument\n          )\n        )\n      }).catch(err => {\n        reject(\n          error.call(\n            this,\n            `No Document found in \"${ collectionName }\" collection with key ${ JSON.stringify(docSelectionCriteria) }`\n          )\n        )\n      })\n    }\n\n    // check for user errors\n    if (!docUpdates) {\n      this.userErrors.push('No update object provided to update() method. Use an object e.g. { name: \"William\" }')\n    }\n    else if (!(typeof docUpdates == 'object' && docUpdates instanceof Array == false)) {\n      this.userErrors.push('Data passed to .update() must be an object. Not an array, string, number or boolean.')\n    }\n\n    if (!this.userErrors.length) {\n      if (typeof docSelectionCriteria == 'object') {\n        this.updateDocumentByCriteria()\n      }\n      else {\n        this.updateDocumentByKey()\n      }\n    }\n    else {\n      showUserErrors.call(this)\n    }\n\n  })\n\n}","import logger from '../../utils/logger'\nimport isSubset from '../../utils/isSubset'\nimport success from '../../api-utils/success'\nimport error from '../../api-utils/error'\nimport showUserErrors from '../../api-utils/showUserErrors'\nimport selectionLevel from '../../api-utils/selectionLevel'\n\nexport default function set(newDocument, options = { keys: false }) {\n\n  let collectionName = this.collectionName\n  let docSelectionCriteria = this.docSelectionCriteria\n  let currentSelectionLevel = selectionLevel.call(this)\n\n  return new Promise((resolve, reject) => {\n\n    // set collection\n    this.setCollection = () => {\n      this.lf[collectionName].clear().then(() => {\n        if (!options.keys) {\n          newDocument.forEach(doc => {\n            this.add(doc)\n          })\n          resolve(\n            success.call(\n              this,\n              `Collection \"${ collectionName }\" set with ${ newDocument.length } Documents.`, \n              newDocument\n            )\n          )\n        }\n        else {\n          console.log('keys provided')\n          // check that every document in array has a _key property\n          let docsWithoutKey = 0\n          newDocument.forEach(doc => {\n            if (!doc.hasOwnProperty('_key')) {\n              docsWithoutKey++\n            }\n          })\n          if (docsWithoutKey) {\n            reject(\n              error.call(\n                this,\n                `Documents provided to .set() in an array must each have a _key property set to a string.`\n              )\n            )\n          }\n          else {\n            newDocument.forEach(doc => {\n              let key = doc._key\n              delete doc._key\n              this.add(doc, key)\n            })\n            resolve(\n              success.call(\n                this,\n                `Collection \"${ collectionName }\" set with ${ newDocument.length } Documents.`, \n                newDocument\n              )\n            )\n          }\n        }\n      }).catch(err => {\n        reject(\n          error.call(\n            this,\n            `Could not set ${ collectionName } Collection with data ${ JSON.stringify(newDocument) }.`\n          )\n        )\n      });\n    }\n\n    // set document\n    this.setDocument = () => {\n      \n      // set document by criteria\n      this.setDocumentByCriteria = () => {\n        let docsToSet = []\n        this.lf[collectionName].iterate((value, key) => {\n          if (isSubset(value, docSelectionCriteria)) {\n            docsToSet.push({ key, newDocument })\n          }\n        }).then(() => {\n          if (!docsToSet.length) {\n            reject(\n              error.call(\n                this,\n                `No Documents found in ${ collectionName } Collection with criteria ${ JSON.stringify(docSelectionCriteria) }.`\n              )\n            )\n          }\n          if (docsToSet.length > 1) {\n            logger.warn.call(this, `Multiple documents (${ docsToSet.length }) with ${ JSON.stringify(docSelectionCriteria) } found for setting.`)\n          }\n        }).then(() => {\n          docsToSet.forEach((docToSet, index) => {\n            this.lf[collectionName].setItem(docToSet.key, docToSet.newDocument).then(value => {\n  \n              if (index === (docsToSet.length - 1)) {\n                resolve(\n                  success.call(\n                    this,\n                    `${ docsToSet.length } Document${ docsToSet.length > 1 ? 's' : '' } in \"${ collectionName }\" collection with ${ JSON.stringify(docSelectionCriteria) } was set.`, \n                    newDocument\n                  )\n                )\n              }\n            }).catch(err => {\n              reject(\n                error.call(\n                  this,\n                  `Could not set ${ docsToSet.length } Documents in ${ collectionName } Collection.`\n                )\n              )\n            })\n          })\n        })\n      }\n  \n      // set document by key\n      this.setDocumentByKey = () => {\n        this.lf[collectionName].setItem(docSelectionCriteria, newDocument).then(value => {\n          resolve(\n            success.call(\n              this,\n              `Document in \"${ collectionName }\" collection with key ${ JSON.stringify(docSelectionCriteria) } was set.`,\n              newDocument\n            )\n          )\n        }).catch(err => {\n          reject(\n            error.call(\n              this,\n              `Document in \"${ collectionName }\" collection with key ${ JSON.stringify(docSelectionCriteria) } could not be set.`\n            )\n          )\n        })\n      }\n\n      if (typeof docSelectionCriteria == 'object') {\n        return this.setDocumentByCriteria()\n      }\n      else {\n        return this.setDocumentByKey()\n      }\n    }\n\n    // check for user errors\n    if (!newDocument) {\n      this.userErrors.push('No new Document object provided to set() method. Use an object e.g. { id: 1, name: \"Bill\", age: 47 }')\n    }\n    else if (currentSelectionLevel === 'doc') {\n      if (!(typeof newDocument == 'object' && newDocument instanceof Array == false)) {\n        this.userErrors.push('Data passed to .set() must be an object. Not an array, string, number or boolean.')\n      }\n    }\n    else if (currentSelectionLevel === 'collection') {\n      if (!(typeof newDocument == 'object' && newDocument instanceof Array == true)) {\n        this.userErrors.push('Data passed to .set() must be an array of objects. Not an object, string, number or boolean.')\n      }\n    }\n\n    if (!this.userErrors.length) {\n      if (currentSelectionLevel == 'collection') {\n        return this.setCollection()\n      }\n      else if (currentSelectionLevel == 'doc') {\n        return this.setDocument()\n      }\n    }\n    else {\n      showUserErrors.call(this)\n    }\n\n  })\n}","import isSubset from '../../utils/isSubset'\nimport logger from \"../../utils/logger\"\nimport selectionLevel from '../../api-utils/selectionLevel'\nimport success from '../../api-utils/success'\nimport error from '../../api-utils/error'\nimport showUserErrors from '../../api-utils/showUserErrors'\n\nexport default function deleteIt() {\n\n  return new Promise((resolve, reject) => {\n\n    // delete database\n    this.deleteDatabase = () => {\n      let dbName = this.dbName\n\n      indexedDB.deleteDatabase(dbName)\n      resolve(\n        success.call(\n          this,\n          `Database \"${ dbName }\" deleted.`,\n          { database: dbName }\n        )\n      )\n    }\n\n    // delete collection\n    this.deleteCollection = () => {\n      let dbName = this.dbName\n      let collectionName = this.collectionName\n\n      // we can only delete one collection at a time, which is why we need a queue\n\n      this.addToDeleteCollectionQueue = (collectionName) => {\n        this.deleteCollectionQueue.queue.push(collectionName)\n        this.runDeleteCollectionQueue()\n      }\n\n      this.runDeleteCollectionQueue = () => {\n        if (this.deleteCollectionQueue.running == false) {\n          this.deleteCollectionQueue.running = true\n          this.deleteNextCollectionFromQueue()\n        }\n      }\n\n      this.deleteNextCollectionFromQueue = () => {\n        if (this.deleteCollectionQueue.queue.length) {\n          let collectionToDelete = this.deleteCollectionQueue.queue[0]\n          this.deleteCollectionQueue.queue.shift()\n\n          this.lf[collectionToDelete].dropInstance({\n            name        : dbName,\n            storeName   : collectionToDelete\n          }).then(() => {\n            this.deleteNextCollectionFromQueue()\n            resolve(\n              success.call(\n                this,\n                `Collection \"${ collectionToDelete }\" deleted.`,\n                { collection: collectionToDelete }\n              )\n            )\n          }).catch(error => {\n            reject(\n              error.call(\n                this,\n                `Collection \"${ collectionToDelete }\" could not be deleted.`\n              )\n            )\n          })\n        }\n        else {\n          this.deleteCollectionQueue.running = false\n        }\n      }\n\n      this.addToDeleteCollectionQueue(collectionName)\n    }\n\n    // delete document\n    this.deleteDocument = () => {\n\n      let collectionName = this.collectionName\n      let docSelectionCriteria = this.docSelectionCriteria\n\n      // delete document by criteria\n      this.deleteDocumentByCriteria = () => {\n        let keysForDeletion = []\n        this.lf[collectionName].iterate((value, key) => {\n          if (isSubset(value, docSelectionCriteria)) {\n            keysForDeletion.push(key)\n          }\n        }).then(() => {\n          if (!keysForDeletion.length) {\n            reject(\n              error.call(\n                this,\n                `No Documents found in \"${ collectionName }\" Collection with criteria ${ JSON.stringify(docSelectionCriteria) }. No documents deleted.`\n              )\n            )\n          }\n          if (keysForDeletion.length > 1) {\n            logger.warn.call(this, `Multiple documents (${ keysForDeletion.length }) with ${ JSON.stringify(docSelectionCriteria) } found.`)\n          }\n        }).then(() => {\n          keysForDeletion.forEach((key, index) => {\n            this.lf[collectionName].removeItem(key).then(() => {\n              if (index === (keysForDeletion.length - 1)) {\n                resolve(\n                  success.call(\n                    this,\n                    `${ keysForDeletion.length } Document${ keysForDeletion.length > 1 ? 's' : '' } with ${ JSON.stringify(docSelectionCriteria) } deleted.`,\n                    { keys: keysForDeletion }\n                  )\n                )\n              }\n            }).catch(err => {\n              reject(\n                error.call(\n                  this,\n                  `Could not delete ${ keysForDeletion.length } Documents in ${ collectionName } Collection.`\n                )\n              )\n            })\n          })\n        })\n      }\n\n      // delete document by key\n      this.deleteDocumentByKey = () => {\n        this.lf[collectionName].getItem(docSelectionCriteria).then(value => {\n          if (value) {\n            this.lf[collectionName].removeItem(docSelectionCriteria).then(() => {\n              resolve(\n                success.call(\n                  this,\n                  `Document with key ${ JSON.stringify(docSelectionCriteria) } deleted.`,\n                  { key: docSelectionCriteria }\n                )\n              )\n            }).catch(function(err) {\n              reject(\n                error.call(\n                  this,\n                  `No Document found in \"${ collectionName }\" Collection with key ${ JSON.stringify(docSelectionCriteria) }. No document was deleted.`\n                )\n              )\n            });\n          }\n          else {\n            reject(\n              error.call(\n                this,\n                `No Document found in \"${ collectionName }\" Collection with key ${ JSON.stringify(docSelectionCriteria) }. No document was deleted.`\n              )\n            )\n          }\n        });\n\n      }\n\n      if (typeof docSelectionCriteria == 'object') {\n        return this.deleteDocumentByCriteria()\n      }\n      else {\n        return this.deleteDocumentByKey()\n      }\n    }\n    \n    if (!this.userErrors.length) {\n      let currentSelectionLevel = selectionLevel.call(this)\n  \n      if (currentSelectionLevel == 'db') {\n        return this.deleteDatabase()\n      }\n      else if (currentSelectionLevel == 'collection') {\n        return this.deleteCollection()\n      }\n      else if (currentSelectionLevel == 'doc') {\n        return this.deleteDocument()\n      }\n    }\n    else {\n      showUserErrors.call(this)\n    }\n\n  })\n\n}","\"use strict\"\n\n// import api methods\nimport collection from './api/selectors/collection'\nimport doc from './api/selectors/doc'\n\nimport orderBy from './api/filters/orderBy'\nimport limit from './api/filters/limit'\n\nimport get from './api/actions/get'\nimport add from './api/actions/add'\nimport update from './api/actions/update'\nimport set from './api/actions/set'\nimport deleteIt from './api/actions/delete'\n\n// Localbase\nexport default class Localbase {\n  constructor(dbName) {\n\n    // properties\n    this.dbName = dbName\n    this.lf = {} // where we store our localForage instances\n    this.collectionName = null\n    this.orderByProperty = null\n    this.orderByDirection = null\n    this.limitBy = null\n    this.docSelectionCriteria = null\n\n    // queues\n    this.deleteCollectionQueue = {\n      queue: [],\n      running: false\n    }\n\n    // config\n    this.config = {\n      debug: true\n    }\n\n    // user errors - e.g. wrong type or no value passed to a method\n    this.userErrors = []\n\n    // api - selectors\n    this.collection = collection.bind(this)\n    this.doc = doc.bind(this)\n\n    // api - filters\n    this.orderBy = orderBy.bind(this)\n    this.limit = limit.bind(this)\n\n    // api - actions\n    this.get = get.bind(this)\n    this.add = add.bind(this)\n    this.update = update.bind(this)\n    this.set = set.bind(this)\n    this.delete = deleteIt.bind(this)\n\n  }\n}","import Localbase from './localbase/localbase'\n\nexport default Localbase","// Defaults\nvar defaultOptions = {\n\tformat: 'image/png',\n\tquality: 0.92,\n\twidth: undefined,\n\theight: undefined,\n\tCanvas: undefined,\n\tcrossOrigin: undefined\n};\n\n// Return Promise\nvar mergeImages = function (sources, options) {\n\tif ( sources === void 0 ) sources = [];\n\tif ( options === void 0 ) options = {};\n\n\treturn new Promise(function (resolve) {\n\toptions = Object.assign({}, defaultOptions, options);\n\n\t// Setup browser/Node.js specific variables\n\tvar canvas = options.Canvas ? new options.Canvas() : window.document.createElement('canvas');\n\tvar Image = options.Canvas ? options.Canvas.Image : window.Image;\n\tif (options.Canvas) {\n\t\toptions.quality *= 100;\n\t}\n\n\t// Load sources\n\tvar images = sources.map(function (source) { return new Promise(function (resolve, reject) {\n\t\t// Convert sources to objects\n\t\tif (source.constructor.name !== 'Object') {\n\t\t\tsource = { src: source };\n\t\t}\n\n\t\t// Resolve source and img when loaded\n\t\tvar img = new Image();\n\t\timg.crossOrigin = options.crossOrigin;\n\t\timg.onerror = function () { return reject(new Error('Couldn\\'t load image')); };\n\t\timg.onload = function () { return resolve(Object.assign({}, source, { img: img })); };\n\t\timg.src = source.src;\n\t}); });\n\n\t// Get canvas context\n\tvar ctx = canvas.getContext('2d');\n\n\t// When sources have loaded\n\tresolve(Promise.all(images)\n\t\t.then(function (images) {\n\t\t\t// Set canvas dimensions\n\t\t\tvar getSize = function (dim) { return options[dim] || Math.max.apply(Math, images.map(function (image) { return image.img[dim]; })); };\n\t\t\tcanvas.width = getSize('width');\n\t\t\tcanvas.height = getSize('height');\n\n\t\t\t// Draw images to canvas\n\t\t\timages.forEach(function (image) {\n\t\t\t\tctx.globalAlpha = image.opacity ? image.opacity : 1;\n\t\t\t\treturn ctx.drawImage(image.img, image.x || 0, image.y || 0);\n\t\t\t});\n\n\t\t\tif (options.Canvas && options.format === 'image/jpeg') {\n\t\t\t\t// Resolve data URI for node-canvas jpeg async\n\t\t\t\treturn new Promise(function (resolve) {\n\t\t\t\t\tcanvas.toDataURL(options.format, {\n\t\t\t\t\t\tquality: options.quality,\n\t\t\t\t\t\tprogressive: false\n\t\t\t\t\t}, function (err, jpeg) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tthrow err;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(jpeg);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Resolve all other data URIs sync\n\t\t\treturn canvas.toDataURL(options.format, options.quality);\n\t\t}));\n});\n};\n\nexport default mergeImages;\n//# sourceMappingURL=index.es2015.js.map\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n"],"sourceRoot":""}