{"version":3,"sources":["webpack:///./src/views/forms/meterRead.vue?1188","webpack:///./src/views/forms/meterRead.vue?8d9c","webpack:///src/views/forms/meterRead.vue","webpack:///./src/views/forms/meterRead.vue?246d","webpack:///./src/views/forms/meterRead.vue?640b"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","snackbar","timeout","scopedSlots","_u","key","fn","ref","_b","on","$event","display","_v","model","value","callback","$$v","$set","expression","_s","text","upLoadingDialog","uploadedPercent","uploadedTotal","toLocaleString","uploadedLoaded","_e","previousMeterDialog","meterReading","customer_id","previousReading","computedReadDate","previousMeterImageLoading","showLastestEngineerMeterImage","lightBoxVisible","lightBoxImage","hideLightBoxImage","imageChange","imageChangeGallery","loading","showLastestEngineerMeter","customer","isFormValid","meterIdRules","meterLeftRules","meterRightRules","meter_metric","uploadEngineerMeter","resetMeterReadForm","takeImageCamera","takeImageGallery","resetImage","meterImage","showUpdatedMeterImage","staticRenderFns","component","VBtn","VCard","VCardActions","VCardSubtitle","VCardText","VCardTitle","VCol","VContainer","VDialog","VDivider","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels","VForm","VIcon","VRadio","VRadioGroup","VRow","VSnackbar","VSpacer","VTextField","VTextarea"],"mappings":"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","file":"js/chunk-1b7927ce.13439963.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./meterRead.vue?vue&type=style&index=0&id=93579c0c&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"pa-3\"},[_c('v-snackbar',{attrs:{\"timeout\":_vm.snackbar.timeout,\"top\":\"\",\"color\":\"primary\"},scopedSlots:_vm._u([{key:\"action\",fn:function(ref){\nvar attrs = ref.attrs;\nreturn [_c('v-btn',_vm._b({attrs:{\"color\":\"pink\",\"text\":\"\"},on:{\"click\":function($event){_vm.snackbar.display = false}}},'v-btn',attrs,false),[_vm._v(\" Close \")])]}}]),model:{value:(_vm.snackbar.display),callback:function ($$v) {_vm.$set(_vm.snackbar, \"display\", $$v)},expression:\"snackbar.display\"}},[_vm._v(\" \"+_vm._s(_vm.snackbar.text)+\" \")]),_c('v-dialog',{attrs:{\"width\":\"70%\"},model:{value:(_vm.upLoadingDialog.show),callback:function ($$v) {_vm.$set(_vm.upLoadingDialog, \"show\", $$v)},expression:\"upLoadingDialog.show\"}},[_c('v-card',{staticClass:\"mb-2 mx-auto\",attrs:{\"loading\":\"\",\"rounded\":\"lg\",\"elevation\":\"16\"}},[_c('v-card-title',{staticClass:\"justify-center\",attrs:{\"primary-title\":\"\"}},[_vm._v(_vm._s(_vm.upLoadingDialog.text))]),(_vm.upLoadingDialog.upLoadingImage)?_c('v-card-text',[_c('v-divider',{staticClass:\"mb-2\"}),_c('table',[_c('tbody',[_c('tr',{staticClass:\"title\"},[_c('td',[_vm._v(\"Percentage: \")]),_c('td',[_vm._v(_vm._s(_vm.uploadedPercent))])]),_c('tr',{staticClass:\"title\"},[_c('td',[_vm._v(\"Total:\")]),_c('td',[_vm._v(_vm._s(_vm.uploadedTotal.toLocaleString()))])]),_c('tr',{staticClass:\"title\"},[_c('td',[_vm._v(\"Loaded:\")]),_c('td',[_vm._v(_vm._s(_vm.uploadedLoaded.toLocaleString()))])])])])],1):_vm._e()],1)],1),_c('v-dialog',{attrs:{\"width\":\"400\"},model:{value:(_vm.previousMeterDialog),callback:function ($$v) {_vm.previousMeterDialog=$$v},expression:\"previousMeterDialog\"}},[_c('v-card',[_c('v-card-title',[_vm._v(\" Previous meter reading \")]),_c('v-card-subtitle',[_c('p',[_vm._v(\" Account: \"+_vm._s(this.meterReading.customer_id)+\" \")])]),_c('v-card-text',[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('v-text-field',{attrs:{\"type\":\"text\",\"disabled\":\"\",\"dense\":\"\",\"outlined\":\"\",\"label\":\"Meter Identifier\",\"hint\":\"Meter Identifier\"},model:{value:(_vm.previousReading.meter_id),callback:function ($$v) {_vm.$set(_vm.previousReading, \"meter_id\", $$v)},expression:\"previousReading.meter_id\"}}),_c('v-text-field',{attrs:{\"type\":\"text\",\"disabled\":\"\",\"dense\":\"\",\"outlined\":\"\",\"label\":\"Meter Metric\",\"hint\":\"Meter Metric\"},model:{value:(_vm.previousReading.meter_metric),callback:function ($$v) {_vm.$set(_vm.previousReading, \"meter_metric\", $$v)},expression:\"previousReading.meter_metric\"}}),_c('div',{staticClass:\"d-flex\"},[_c('v-text-field',{staticClass:\"mr-2\",attrs:{\"type\":\"number\",\"disabled\":\"\",\"dense\":\"\",\"outlined\":\"\",\"label\":\"Meter Left\",\"hint\":\"Meter Left\"},model:{value:(_vm.previousReading.meter_left),callback:function ($$v) {_vm.$set(_vm.previousReading, \"meter_left\", $$v)},expression:\"previousReading.meter_left\"}}),_c('v-text-field',{attrs:{\"type\":\"number\",\"disabled\":\"\",\"dense\":\"\",\"outlined\":\"\",\"label\":\"Meter Right\",\"hint\":\"Meter Right\"},model:{value:(_vm.previousReading.meter_right),callback:function ($$v) {_vm.$set(_vm.previousReading, \"meter_right\", $$v)},expression:\"previousReading.meter_right\"}})],1),_c('v-text-field',{attrs:{\"type\":\"text\",\"disabled\":\"\",\"dense\":\"\",\"value\":_vm.computedReadDate,\"outlined\":\"\",\"label\":\"Date\",\"hint\":\"Reading Date\"}}),_c('v-textarea',{attrs:{\"type\":\"text\",\"disabled\":\"\",\"dense\":\"\",\"outlined\":\"\",\"label\":\"Comments:\",\"readonly\":\"\"},model:{value:(_vm.previousReading.omments),callback:function ($$v) {_vm.$set(_vm.previousReading, \"omments\", $$v)},expression:\"previousReading.omments\"}})],1)],1)],1),_c('v-card-actions',[_c('v-spacer'),(_vm.previousMeterImageAvailable)?_c('v-btn',{staticClass:\"text-none\",attrs:{\"loading\":_vm.previousMeterImageLoading,\"size\":\"large\"},on:{\"click\":_vm.showLastestEngineerMeterImage}},[_vm._v(\"Show Photo\")]):_vm._e(),_c('v-btn',{staticClass:\"text-none\",attrs:{\"size\":\"large\",\"color\":\"primary\"},on:{\"click\":function($event){_vm.previousMeterDialog = false}}},[_vm._v(\"Close\")])],1)],1)],1),_c('vue-easy-lightbox',{attrs:{\"visible\":_vm.lightBoxVisible,\"imgs\":_vm.lightBoxImage},on:{\"hide\":_vm.hideLightBoxImage}}),_c('label',{staticClass:\"d-none\"},[_c('input',{attrs:{\"id\":\"file-input\",\"type\":\"file\",\"accept\":\"image/*\",\"capture\":\"\"},on:{\"change\":_vm.imageChange}})]),_c('label',{staticClass:\"d-none\"},[_c('input',{attrs:{\"id\":\"file-input_gallery\",\"type\":\"file\",\"accept\":\"image/x-png,image/jpeg,image/gif\"},on:{\"change\":_vm.imageChangeGallery}})]),_c('v-row',{staticClass:\"pa-2 mb-2 d-flex justify-space-between align-baseline\"},[_c('div',[_vm._v(\"Engineer Meter Reading\")]),_c('div',[_c('v-btn',{staticClass:\"mx-2\",attrs:{\"loading\":_vm.loading,\"fab\":\"\",\"medium\":\"\",\"color\":\"error\"},on:{\"click\":_vm.showLastestEngineerMeter}},[_c('v-icon',{attrs:{\"dark\":\"\"}},[_vm._v(\"mdi-page-previous\")])],1)],1)]),_c('v-row',[_c('v-expansion-panels',{staticClass:\"expansion_panels\"},[_c('customer',{attrs:{\"customer\":_vm.customer}}),_c('v-expansion-panel',{staticClass:\"expansion_pane mb-1\"},[_c('v-expansion-panel-header',[_c('div',[_vm._v(\"Meter Read\")])]),_c('v-expansion-panel-content',[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"6\"}},[_c('v-form',{ref:\"meterReadForm\",model:{value:(_vm.isFormValid),callback:function ($$v) {_vm.isFormValid=$$v},expression:\"isFormValid\"}},[_c('v-text-field',{attrs:{\"density\":\"comfortable\",\"rules\":_vm.meterIdRules,\"required\":\"\",\"type\":\"text\",\"clearable\":\"\",\"hint\":\"Meter Identifier\",\"outlined\":\"\",\"label\":\"Meter Identifier\"},model:{value:(_vm.meterReading.meter_id),callback:function ($$v) {_vm.$set(_vm.meterReading, \"meter_id\", $$v)},expression:\"meterReading.meter_id\"}}),_c('div',{staticClass:\"d-flex\"},[_c('v-text-field',{staticClass:\"mr-2\",attrs:{\"density\":\"comfortable\",\"rules\":_vm.meterLeftRules,\"required\":\"\",\"type\":\"number\",\"clearable\":\"\",\"hint\":\"Meter Left\",\"outlined\":\"\",\"label\":\"Meter Left\"},model:{value:(_vm.meterReading.meter_left),callback:function ($$v) {_vm.$set(_vm.meterReading, \"meter_left\", $$v)},expression:\"meterReading.meter_left\"}}),_c('v-text-field',{attrs:{\"density\":\"comfortable\",\"rules\":_vm.meterRightRules,\"required\":\"\",\"type\":\"number\",\"clearable\":\"\",\"hint\":\"Meter Right\",\"outlined\":\"\",\"label\":\"Meter Right\"},model:{value:(_vm.meterReading.meter_right),callback:function ($$v) {_vm.$set(_vm.meterReading, \"meter_right\", $$v)},expression:\"meterReading.meter_right\"}})],1),_c('v-container',{attrs:{\"fluid\":\"\"}},[_c('p',[_vm._v(\"Meter Metric: \"),_c('strong',[_vm._v(_vm._s(_vm.meterReading.meter_metric))])]),_c('v-radio-group',{attrs:{\"inline\":\"\"},model:{value:(_vm.meterReading.meter_metric),callback:function ($$v) {_vm.$set(_vm.meterReading, \"meter_metric\", $$v)},expression:\"meterReading.meter_metric\"}},[_c('v-radio',{attrs:{\"label\":\"Meters\",\"value\":\"Meters\"}}),_c('v-radio',{attrs:{\"label\":\"Feet\",\"value\":\"Feet\"}})],1)],1),_c('v-textarea',{attrs:{\"dense\":\"\",\"outlined\":\"\",\"label\":\"Comments:\"},model:{value:(_vm.meterReading.comments),callback:function ($$v) {_vm.$set(_vm.meterReading, \"comments\", $$v)},expression:\"meterReading.comments\"}}),_c('v-card-actions',[_c('v-btn',{staticClass:\"text-none\",attrs:{\"disabled\":!_vm.isFormValid,\"loading\":_vm.loading,\"elevation\":\"3\",\"color\":\"success\"},on:{\"click\":_vm.uploadEngineerMeter}},[_vm._v(\"Upload Meter Read\")]),_c('v-spacer'),_c('v-btn',{staticClass:\"text-none\",attrs:{\"elevation\":\"3\",\"color\":\"error\"},on:{\"click\":_vm.resetMeterReadForm}},[_vm._v(\"Reset Form\")])],1)],1)],1),_c('v-col',{staticClass:\"myborder pa-1\",attrs:{\"cols\":\"12\",\"sm\":\"6\"}},[_c('v-card-actions',[_c('v-btn',{staticClass:\"text-none\",attrs:{\"text\":\"\",\"color\":\"primary\"},on:{\"click\":function($event){return _vm.takeImageCamera()}}},[_vm._v(\"Camera \")]),_c('v-btn',{staticClass:\"text-none\",attrs:{\"text\":\"\",\"color\":\"primary\"},on:{\"click\":function($event){return _vm.takeImageGallery()}}},[_vm._v(\"Gallery \")]),_c('v-spacer'),_c('v-btn',{staticClass:\"text-none\",attrs:{\"text\":\"\",\"color\":\"warning\"},on:{\"click\":function($event){return _vm.resetImage()}}},[_vm._v(\"Reset \")])],1),_c('v-divider',{staticClass:\"border-opacity-25\"}),_c('div',{staticClass:\"ma-2 myborder\"},[_c('img',{staticClass:\"myimg\",attrs:{\"src\":_vm.meterImage},on:{\"click\":function($event){return _vm.showUpdatedMeterImage()}}})])],1)],1)],1)],1),_c('v-expansion-panel',{staticClass:\"expansion_panel mb-2\"})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import 'material-design-icons-iconfont/dist/material-design-icons.css'\r\n\r\n<template>\r\n     \r\n  \r\n  <div class=\"pa-3\">\r\n\r\n      <!-- showing the snackBar Message -->\r\n      <v-snackbar  v-model =\"snackbar.display\" :timeout =\"snackbar.timeout\" top color=\"primary\">\r\n        {{ snackbar.text }}\r\n        <template v-slot:action=\"{ attrs }\">\r\n         <v-btn color=\"pink\" text v-bind=\"attrs\" @click=\"snackbar.display = false\" >\r\n          Close\r\n         </v-btn>\r\n       </template>\r\n\r\n      </v-snackbar>\r\n\r\n      <!-- showing the uploading a Meter Reading dialog -->\r\n      <v-dialog  v-model =\"upLoadingDialog.show\"  width=\"70%\">\r\n \r\n           <v-card loading rounded=\"lg\" elevation=\"16\" class=\"mb-2 mx-auto\">\r\n\r\n            <v-card-title primary-title class=\"justify-center\">{{upLoadingDialog.text}}</v-card-title>\r\n            \r\n              <v-card-text v-if=\"upLoadingDialog.upLoadingImage\">\r\n\r\n                <v-divider class=\"mb-2\"></v-divider>\r\n\r\n                    <table>\r\n                          <tbody>\r\n     \r\n                              <tr class=\"title\">\r\n                              <td>Percentage: </td>\r\n                              <td>{{  uploadedPercent }}</td>\r\n                              </tr>\r\n    \r\n                              <tr class=\"title\">\r\n                              <td>Total:</td>\r\n                              <td>{{  uploadedTotal.toLocaleString() }}</td>\r\n                              </tr>\r\n   \r\n                              <tr class=\"title\">\r\n                              <td>Loaded:</td>\r\n                              <td>{{  uploadedLoaded.toLocaleString() }}</td>\r\n                              </tr>\r\n                          </tbody>\r\n\r\n                    </table>\r\n                        \r\n              </v-card-text>\r\n\r\n            </v-card>\r\n\r\n      </v-dialog>\r\n \r\n      <!-- showing the previous Meter Read Dialog -->\r\n      <v-dialog  v-model = \"previousMeterDialog\"  width=\"400\">\r\n    \r\n                <v-card>\r\n              \r\n                  <v-card-title>\r\n                     Previous meter reading\r\n                  </v-card-title>\r\n\r\n\r\n                  <v-card-subtitle>\r\n                      <p>\r\n                         Account: {{ this.meterReading.customer_id }}\r\n                      </p>\r\n                  </v-card-subtitle>\r\n\r\n               \r\n                  <v-card-text>\r\n                      <v-row>\r\n                        <v-col cols=\"12\">\r\n                          <v-text-field type='text'   disabled dense  v-model=\"previousReading.meter_id\"        outlined label=  \"Meter Identifier\"  hint = \"Meter Identifier\"></v-text-field>\r\n                          <v-text-field type='text'   disabled dense  v-model=\"previousReading.meter_metric\"    outlined label=  \"Meter Metric\"      hint = \"Meter Metric\"></v-text-field>\r\n                \r\n                          <div class=\"d-flex\"> \r\n                            <v-text-field class=\"mr-2\" type='number' disabled dense  v-model=\"previousReading.meter_left\"      outlined label=  \"Meter Left\"        hint = \"Meter Left\" ></v-text-field>\r\n                            <v-text-field type='number' disabled dense               v-model=\"previousReading.meter_right\"     outlined label=  \"Meter Right\"       hint = \"Meter Right\" ></v-text-field>\r\n                          </div>\r\n\r\n                          <v-text-field type='text'   disabled dense  :value= \"computedReadDate\"               outlined label = \"Date\"            hint = \"Reading Date\"></v-text-field>\r\n                          <v-textarea   type='text'   disabled dense  v-model=\"previousReading.omments\"        outlined label = \"Comments:\" readonly></v-textarea>\r\n               \r\n                        </v-col>\r\n                      </v-row>\r\n                  </v-card-text>\r\n\r\n                  <v-card-actions>\r\n                    <v-spacer></v-spacer>\r\n                    \r\n                    <v-btn  v-if=\"previousMeterImageAvailable\" :loading=\"previousMeterImageLoading\"  class=\"text-none\"   size=\"large\"      @click = \"showLastestEngineerMeterImage\">Show Photo</v-btn>\r\n\r\n                    <v-btn    class=\"text-none\"   size=\"large\" color=\"primary\" @click = \"previousMeterDialog = false\">Close</v-btn>\r\n                  </v-card-actions>\r\n\r\n              </v-card>\r\n\r\n      </v-dialog>\r\n\r\n      <!-- Display an image in a lightBox, used for the updated and previous image-->\r\n      <vue-easy-lightbox \r\n            :visible   =  \"lightBoxVisible\" \r\n            :imgs      =  \"lightBoxImage\"\r\n            @hide      =  \"hideLightBoxImage\"\r\n      ></vue-easy-lightbox>\r\n      \r\n      <!-- File Input to select a Camera Image-->\r\n      <label class=\"d-none\">\r\n          <input id=\"file-input\"         v-on:change=\"imageChange\"   type=\"file\" accept=\"image/*\" capture >\r\n      </label>\r\n      \r\n      <!-- File Input to select a Gallery Image-->\r\n      <label class=\"d-none\">\r\n           <input id=\"file-input_gallery\" v-on:change=\"imageChangeGallery\" type=\"file\" accept=\"image/x-png,image/jpeg,image/gif\">\r\n      </label>\r\n      \r\n      <!-- View Header Title and previous Meter Button-->\r\n      <v-row class=\"pa-2 mb-2 d-flex justify-space-between align-baseline\">\r\n                \r\n            <div>Engineer Meter Reading</div>\r\n            <div>   \r\n\r\n              <v-btn  :loading = \"loading\" @click=\"showLastestEngineerMeter\" class=\"mx-2\" fab medium color=\"error\">\r\n                <v-icon dark>mdi-page-previous</v-icon>\r\n              </v-btn>\r\n\r\n\r\n            </div>\r\n\r\n      </v-row>\r\n\r\n      <!-- Meter Read Form-->\r\n      <v-row >\r\n            <v-expansion-panels class=\"expansion_panels\">\r\n          \r\n              <!-- customerComponent -->\r\n                <customer v-bind:customer = \"customer\" />\r\n              <!-- customerComponent -->\r\n\r\n              <!-- Current Meter Reading -->\r\n                 <v-expansion-panel class=\"expansion_pane mb-1\"> \r\n                  <v-expansion-panel-header>\r\n                    <div>Meter Read</div>\r\n                  </v-expansion-panel-header>\r\n\r\n                  <v-expansion-panel-content>\r\n\r\n\r\n                    <v-row>\r\n                        \r\n                        <v-col cols=\"12\" sm=\"6\">\r\n\r\n                          <v-form ref=\"meterReadForm\" v-model=\"isFormValid\">\r\n                   \r\n                             <v-text-field  density = \"comfortable\" :rules=\"meterIdRules\"        required     type=\"text\"    clearable hint=\"Meter Identifier\" outlined  v-model=\"meterReading.meter_id\"       label=\"Meter Identifier\"></v-text-field>\r\n                                                        \r\n                              <div class=\"d-flex\">\r\n                               <v-text-field  class=\"mr-2\" density = \"comfortable\" :rules=\"meterLeftRules\"     required     type=\"number\"   clearable hint=\"Meter Left\"   outlined  v-model=\"meterReading.meter_left\"    label=\"Meter Left\"></v-text-field>\r\n                               <v-text-field  density = \"comfortable\"              :rules=\"meterRightRules\"    required     type=\"number\"   clearable hint=\"Meter Right\"  outlined  v-model=\"meterReading.meter_right\"   label=\"Meter Right\"></v-text-field>\r\n                             </div>\r\n\r\n                             <v-container fluid>\r\n                             <p>Meter Metric: <strong>{{ meterReading.meter_metric }}</strong></p>\r\n                             <v-radio-group inline v-model=\"meterReading.meter_metric\">\r\n                               <v-radio label=\"Meters\" value=\"Meters\"></v-radio>\r\n                               <v-radio label=\"Feet\"   value=\"Feet\"></v-radio>\r\n                            </v-radio-group>\r\n                            </v-container>\r\n                           \r\n                            <v-textarea  dense outlined v-model=\"meterReading.comments\" label=\"Comments:\"></v-textarea>\r\n               \r\n\r\n                             \r\n                             <v-card-actions>\r\n                                <v-btn class=\"text-none\" :disabled=\"!isFormValid\" :loading = \"loading\" @click=\"uploadEngineerMeter\" elevation=\"3\" color=\"success\" >Upload Meter Read</v-btn>\r\n                                <v-spacer></v-spacer>\r\n                                <v-btn class=\"text-none\" @click=\"resetMeterReadForm\" elevation=\"3\" color=\"error\" >Reset Form</v-btn>\r\n                             </v-card-actions>\r\n                    \r\n                             \r\n                            </v-form>\r\n\r\n                        </v-col>\r\n\r\n\r\n                        <v-col  class=\"myborder pa-1\" cols=\"12\" sm=\"6\">\r\n                                           \r\n                                           <v-card-actions>\r\n                                                      <v-btn class=\"text-none\" text color=\"primary\" @click=\"takeImageCamera()\">Camera\r\n                                                      </v-btn>\r\n        \r\n                                                      <v-btn class=\"text-none\" text color=\"primary\" @click=\"takeImageGallery()\">Gallery\r\n                                                      </v-btn>\r\n                                                                        \r\n                                                      <v-spacer></v-spacer>\r\n        \r\n                                                      <v-btn class=\"text-none\" text color=\"warning\" @click=\"resetImage()\">Reset\r\n                                                      </v-btn>\r\n        \r\n                                           </v-card-actions>      \r\n                                            \r\n                                           <v-divider class=\"border-opacity-25\"></v-divider>\r\n                \r\n                                           <div class=\"ma-2 myborder\">\r\n                                        \r\n                                           <img    class   = \"myimg\" \r\n                                                   @click  = \"showUpdatedMeterImage()\"\r\n                                                   :src    = \"meterImage\"\r\n                                           />\r\n                                        \r\n                                          </div> \r\n\r\n                        </v-col>\r\n\r\n                      \r\n                    </v-row>\r\n\r\n\r\n                  </v-expansion-panel-content>\r\n                </v-expansion-panel>\r\n              <!-- Current Meter Reading -->\r\n\r\n\r\n              <!-- last one for space-->\r\n                <v-expansion-panel class=\"expansion_panel mb-2\"> \r\n                </v-expansion-panel>\r\n              <!-- last one for space-->\r\n\r\n            </v-expansion-panels>\r\n     </v-row>\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport {store}   from '../../main.js'\r\nimport Localbase from 'localbase'\r\n\r\nexport default {\r\n\r\n   name     : \"meterRead\",\r\n   formName : 'meterRead',\r\n\r\n    destroyed () {\r\n       \r\n           store.consoleLog( \"meterRead form destroyed\");\r\n\r\n           this.customer                      = JSON.parse( localStorage.getItem( \"equalResponseCustomer\") );\r\n           this.engineer                      = JSON.parse( localStorage.getItem( \"equalResponseEngineer\") );\r\n           this.meterReading.engineer_id      = this.engineer['ENGINEER_ID'];\r\n           this.meterReading.customer_id      = this.customer['ACCOUNT'];\r\n           this.meterReading.meter_id         = this.customer['USER5'];\r\n\r\n           this.createSnapShot();\r\n    },\r\n      \r\n    created    (){ \r\n \r\n          store.consoleLog( \"meterRead created\");\r\n\r\n          this.customer                         = JSON.parse( localStorage.getItem( \"equalResponseCustomer\") );\r\n          this.engineer                         = JSON.parse( localStorage.getItem( \"equalResponseEngineer\") );\r\n        \r\n          this.meterReading.engineer_id        = this.engineer['ENGINEER_ID'];\r\n          this.meterReading.customer_id        = this.customer['ACCOUNT'];\r\n          this.meterReading.meter_id           = this.customer['USER5'];\r\n          this.meterReading.meter_metric       = 'Meters';\r\n          this.meterImage                      = this.$restServer.engineerMeterImageEmpty;\r\n     \r\n          this.restoreSnapShot();\r\n\r\n    }, \r\n\r\n\r\n   methods   : {\r\n    \r\n            showLastestEngineerMeter(){\r\n\r\n                const customerId = this.customer['ACCOUNT'];\r\n                console.log(`getEngineerMeter( '${customerId}' )`);\r\n\r\n                const resourceUrl  =  this.$restServer.engineerMeter;\r\n                let   url          =  resourceUrl + \"/\" + customerId;\r\n\r\n                this.loading = true;\r\n\r\n                this.$http.get( url )\r\n                .then(  (response) => {\r\n                  \r\n                  const meter       = response.data;\r\n                  if (meter.status === 'success') {\r\n                    \r\n                    this.previousReading.engineer_id    = this.engineer['ENGINEER_ID'];\r\n                    this.previousReading.customer_id    = this.customer['ACCOUNT'];\r\n                    this.previousReading.meter_id       = this.customer['USER5'];\r\n\r\n                    this.previousReading.meter_left     = meter.meter_left;\r\n                    this.previousReading.meter_right    = meter.meter_right;\r\n                    this.previousReading.created_at     = meter.created_at;\r\n                    this.previousReading.meter_metric   = meter.meter_metric;\r\n                    this.previousReading.comments       = meter.comments;\r\n                    this.previousMeterImageAvailable   = (meter.meter_image_path) ? true : false;\r\n                     \r\n                    \r\n                    this.loading                       = false;\r\n                    this.previousMeterDialog           = true;\r\n         \r\n                  } else if ( meter.status === 'error'){\r\n               \r\n                      this.snackbar.text                 = meter.message;\r\n                      this.snackbar.display              = true;\r\n                      this.loading                       = false;\r\n                  }  \r\n                      \r\n                })\r\n                .catch( (e) => {\r\n\r\n                    this.snackbar.text    = e.response.data.exception;\r\n                    this.snackbar.display = true;\r\n                    this.loading          = false;\r\n                });\r\n\r\n            },\r\n\r\n            showLastestEngineerMeterImage() {\r\n\r\n                const customerId = this.customer['ACCOUNT'];\r\n                console.log(`showLastestEngineerMeterImage( '${customerId}' )`);\r\n\r\n                const resourceUrl  =  this.$restServer.engineerMeterImageLink;\r\n                let   url          =  resourceUrl + \"/\" + customerId;\r\n                this.previousMeterImageLoading      = true;\r\n\r\n                this.$http.get( url )\r\n                .then(  (response) => {\r\n                    this.previousMeterImageLoading    = false;\r\n                    this.lightBoxImage                = response.data;\r\n                    this.lightBoxVisible              = true;\r\n                  })\r\n                  .catch( (e) => {\r\n                    this.previousMeterImageLoading      = false;\r\n                    console.log(e);\r\n                  });\r\n\r\n\r\n\r\n            },\r\n            \r\n\r\n            // upload engineers meter reading ..\r\n            // step 1 to upload the meter read , if success\r\n            // then upload the image if any\r\n            async uploadEngineerMeter() {\r\n      \r\n              this.loading                        = true;\r\n              this.upLoadingDialog.show           = true;\r\n                                           \r\n              try {\r\n        \r\n                    this.upLoadingDialog.text           = \"Uploading Meter Read . !!\";\r\n             //       let meterUploadResult               = await this.postEngineerMeter();\r\n             //        if ( meterUploadResult.data.status == 'error' ){\r\n             //            const errMessage = meterUploadResult.data.message; \r\n             //            throw errMessage;\r\n             //       }\r\n                              \r\n                    this.upLoadingDialog.text           = \"Uploading Meter Image.!!\";\r\n\r\n                    this.upLoadingDialog.upLoadingImage = true;\r\n                    let meterImageUploadResult = await this.postEngineerMeterImage();\r\n            \r\n                    if ( meterImageUploadResult.data.status == 'error' ){\r\n                         const errMessage = meterImageUploadResult.data.message; \r\n                         throw errMessage;\r\n                    }\r\n\r\n                    this.resetMeterReadForm();\r\n                    \r\n                      \r\n              } catch (error) {\r\n\r\n                  this.snackbar.display      =  true;\r\n                  this.snackbar.text         =  error;\r\n                  this.snackbar.timeout      = '3000';\r\n\r\n              } finally {\r\n\r\n                 this.loading                         = false;\r\n                 this.upLoadingDialog.show            = false;\r\n                 this.upLoadingDialog.upLoadingImage  = false;\r\n                 this.upLoadingDialog.text            = \"\";\r\n\r\n              }\r\n\r\n            },\r\n \r\n            generateEngineerMeterObj () {\r\n                \r\n              var meterReadObj = {\r\n                                   id        : this.meterReading.customer_id, \r\n                                   leftMeter : this.meterReading.meter_left,\r\n                                   rightMeter: this.meterReading.meter_right,\r\n                };\r\n                return meterReadObj;\r\n            },\r\n \r\n            generateEngineerMeterImageObj () {\r\n                 \r\n                 let   formData        =  new FormData();\r\n                 const meterReadJson   = JSON.stringify(this.meterReading);\r\n                 formData.append( 'meterImage',       this.meterImage);\r\n                 formData.append( 'meterReading',     meterReadJson);\r\n                 return formData;\r\n              \r\n            },\r\n               \r\n            async postEngineerMeter() {\r\n               \r\n              try {\r\n\r\n                const enginerMeterURL          = this.$restServer.engineerMeter;\r\n                const engineerMeterObject      = this.generateEngineerMeterObj();\r\n                const result = await this.$http.post(enginerMeterURL, engineerMeterObject);\r\n                return result;\r\n\r\n              } catch (error) {\r\n                return error;\r\n              } \r\n\r\n            },\r\n                     \r\n            async postEngineerMeterImage() {\r\n\r\n                try {\r\n\r\n                  const engineerMeterImageObject  = this.generateEngineerMeterImageObj();\r\n                  const engineerMeterImageURL     = this.$restServer.engineerMeterImage;\r\n                  \r\n                  return await this.$http.post(engineerMeterImageURL, engineerMeterImageObject, {\r\n                                                \r\n                                                headers               : { 'Content-Type': 'multipart/form-data'},\r\n                                                onUploadProgress : ( progressEvent ) => {\r\n                                                    this.uploadedPercent          = parseInt(Math.round( (progressEvent.loaded / progressEvent.total) * 100));\r\n                                                    this.uploadedTotal            = progressEvent.total;\r\n                                                    this.uploadedLoaded           = progressEvent.loaded;\r\n                                                }   \r\n\r\n                                              });\r\n\r\n                } catch (error) {\r\n                  return error;\r\n                }\r\n           \r\n            },\r\n\r\n            resetMeterReadForm () {\r\n\r\n                this.meterReading.engineer_id        = this.engineer['ENGINEER_ID'];\r\n                this.meterReading.customer_id        = this.customer['ACCOUNT'];\r\n                this.meterReading.meter_id           = this.customer['USER5'];\r\n                this.meterReading.meter_metric       = 'Meters';\r\n                this.meterReading.meter_left         = null;\r\n                this.meterReading.meter_right        = null;\r\n                this.meterReading.comments           = null;\r\n                this.meterImage                      = this.$restServer.engineerMeterImnageEmpty;\r\n                this.createSnapShot();\r\n           \r\n            },\r\n                        \r\n            showUploadingDialog() {\r\n                    this.uploadingDialog = true;\r\n            },\r\n    \r\n            closeUploadingDialog() {\r\n                          setTimeout( () => {\r\n                              this.uploadingdDialog  = false;\r\n                          }, 2000)\r\n            },\r\n            \r\n            createSnapShot(){\r\n\r\n                let snapShot             =  this.generateSnapShot();\r\n                let db                   =  new Localbase( this.$dbName );\r\n\r\n                db.collection( this.collection ).doc( this.meterReading.customer_id).set( snapShot )\r\n                .then(response => { \r\n                   console.log( response)\r\n                })\r\n                .catch(error => {\r\n                   console.log( error)\r\n                })\r\n            },\r\n\r\n            restoreSnapShot(){\r\n\r\n                let db = new Localbase(  this.$dbName );\r\n                db.collection( this.collection).doc( this.meterReading.customer_id).get()\r\n                .then( document => {\r\n                  if ( document != null ) {\r\n                         this.meterReading        = document['meterReading'];\r\n                         this.meterImage          = document['meterImage'];\r\n                         \r\n                  }\r\n                })\r\n                .catch( error => {\r\n                   console.log( error)\r\n                });\r\n\r\n            },\r\n\r\n            generateSnapShot() {\r\n                                let snapShot          =   { \r\n                                                            'meterImage'          : this.meterImage,\r\n                                                            'meterReading'        : this.meterReading,\r\n                                                          };\r\n                                return snapShot;\r\n            },\r\n\r\n            takeImageGallery() {\r\n                    document.getElementById('file-input_gallery').click();\r\n            },\r\n\r\n            takeImageCamera() {\r\n                    document.getElementById('file-input').click();\r\n            },\r\n\r\n            resetImage() {\r\n\r\n                    this.meterImage             = this.$restServer.engineerMeterImageEmpty;\r\n                    this.meterReading.comments  = \"\";\r\n                    this.createSnapShot();\r\n\r\n            },\r\n\r\n            async imageChangeGallery() {\r\n                                          \r\n                                          try {\r\n                                         \r\n                                              var file     = document.getElementById(\"file-input_gallery\");\r\n                                              if (file.files.length > 0 ) {\r\n                                               \r\n                                                  const photo                         = document.getElementById(\"file-input_gallery\").files[0];\r\n                                                  const dataUrl                       = await this.getDataUrl( photo  );\r\n                                                  this.meterImage                     = dataUrl;\r\n                                                  this.createSnapShot();\r\n                                                  document.getElementById('file-input_gallery').value = null;\r\n                                              }\r\n                      \r\n                                          }catch (error) {\r\n                                              console.log(error); \r\n                                          }\r\n                         \r\n            },\r\n                      \r\n            async imageChange() {\r\n                                          \r\n                    try {\r\n                   \r\n                        var file     = document.getElementById(\"file-input\");\r\n                        if (file.files.length > 0 ) {\r\n                         \r\n                            const photo                         = file.files[0];\r\n                            const dataUrl                       = await this.getDataUrl( photo );\r\n                            this.meterImage                     = dataUrl;\r\n                            this.createSnapShot();\r\n                            document.getElementById('file-input').value = null;\r\n                        }\r\n\r\n                    }catch (error) {\r\n                        console.log(error); \r\n                    }\r\n   \r\n            },\r\n           \r\n            getDataUrl( photo ) {\r\n\r\n                        return new Promise(function(resolve, reject) {\r\n                          \r\n                          const reader = new FileReader();\r\n                          reader.readAsDataURL(photo);\r\n                          \r\n                          reader.addEventListener('load',  function(e) {\r\n                              const dataUrl = e.target.result; \r\n                              resolve( dataUrl );\r\n                          });\r\n\r\n                          reader.addEventListener('error', function(e) {\r\n                             reject(e);\r\n                          });\r\n\r\n                        });\r\n            },\r\n\r\n            showUpdatedMeterImage() {\r\n                    this.lightBoxImage          = this.meterImage;\r\n                    this.lightBoxVisible        = true\r\n            },\r\n        \r\n            hideLightBoxImage() {\r\n                    this.lightBoxImage          =  null;\r\n                    this.lightBoxVisible        =  false\r\n            },\r\n \r\n   },\r\n\r\n    computed  :{\r\n            computedReadDate() {\r\n              \r\n              if ( this.previousReading.created_at ) {\r\n\r\n                   const date = new Date(this.previousReading.created_at);\r\n                   return date.toLocaleString('en-GB');\r\n\r\n              } else {\r\n                 return \"\";\r\n              }\r\n         \r\n            },\r\n\r\n            computedPreviousReadingMeterImage() {\r\n                return (this.meterReading.previous_image ) ? this.meterReading.previous_image : \"\"\r\n            },\r\n    },\r\n\r\n   data() {\r\n\r\n    return {\r\n        \r\n         snackbar           : { \r\n                                display : false,\r\n                                text    : \"\",\r\n                                timeout : 3000\r\n         },\r\n\r\n         loading                      : false,\r\n         previousMeterImageLoading    : false,\r\n         previousMeterImageAvailable  : false,\r\n                 \r\n\r\n         upLoadingDialog            : { \r\n                                         show            : false,\r\n                                         upLoadingImage  : false,  \r\n                                         text            : \"\"                                        \r\n                                      },\r\n\r\n         previousMeterDialog        : false,\r\n                   \r\n         isFormValid                : false,\r\n\r\n         uploadedPercent            :  0, \r\n         uploadedTotal              :  0, \r\n         uploadedLoaded             :  0,\r\n\r\n         meterIdRules: [\r\n            v => !!v || 'Meter Identifier is required',\r\n            v => (v && v.length <= 10) || 'Meter Identifier must be less than 10 characters',\r\n         ],\r\n\r\n         meterLeftRules: [\r\n          v => !!v                         || 'Meter Left is required',\r\n          v => ( v > 0 && v < 99999 )      || 'Meter Left must be between 0 and 99999' \r\n         ],\r\n\r\n         meterRightRules: [\r\n          v => !!v                         || 'Meter Right is required',\r\n          v => ( v > 0 && v < 99999 )      || 'Meter Right must be between 0 and 99999' \r\n         ],\r\n\r\n\r\n         meterMetricRules: [\r\n            v => !!v || 'Meter Metric is required',\r\n            v => (v && v.length <= 10) || 'Value must be less than 10 characters',\r\n\r\n         ],\r\n\r\n\r\n         lightBoxVisible           : false,\r\n         lightBoxImage             : null,\r\n         formName                  : \"meterRead\",\r\n        \r\n         customer          : {},\r\n         salesman          : {},\r\n         engineer          : {} ,\r\n\r\n         collection        : \"meterRead\",\r\n         \r\n         previousReading   : {\r\n\r\n                              engineer_id       :  \"\",\r\n                              customer_id       :  \"\",\r\n                              meter_id          :  \"\",\r\n\r\n                              meter_metric       :  \"\",\r\n                              meter_left         :  \"\",\r\n                              meter_right        :  \"\",\r\n                              comments           :  \"\",\r\n\r\n                              created_at        :  \"\",\r\n\r\n\r\n         },\r\n         \r\n         meterImage       :  this.$restServer.meterImageEmpty,\r\n         \r\n         meterReading     :  {\r\n                              engineer_id       :  \"\",\r\n                              customer_id       :  \"\",\r\n                              meter_id          :  \"\",\r\n                              meter_metric       :  \"\",\r\n                                                      \r\n                              meter_left         :  \"\",\r\n                              meter_right        :  \"\",\r\n                              comments           :  \"\",\r\n                            },\r\n\r\n        };\r\n\r\n  }\r\n\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.myimg {\r\n\r\n  object-fit : fill !important;\r\n  width      : 100%  !important;\r\n  height     : auto  !important;\r\n  margin     : auto;\r\n}\r\n\r\n.myborder {\r\n  border        : 1px solid black;\r\n  border-radius : 4px !important;\r\n}\r\n\r\n.row {\r\n  display: flex; /* equal height of the children */\r\n}\r\n\r\n.col {\r\n  flex: 1; /* additionally, equal width */\r\n}\r\n\r\n.dcontents{\r\n  display: contents !important;\r\n}\r\n\r\nh1,h2 {\r\n  font-weight: normal;\r\n}\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\na {\r\n  color: #42b983;\r\n}\r\n.dl_expansion_panel_content>>> .v-expansion-panel-content__wrap {\r\n  padding: 0 !important;\r\n}\r\n\r\n.header{\r\n  font-family: 'Roboto';\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n\r\ninput[type=text] {\r\n  width: 100%;\r\n  padding: 8px 20px;\r\n  margin: 2px 0;\r\n  box-sizing: border-box;\r\n  border: 3px solid #ccc;\r\n  -webkit-transition: 0.5s;\r\n  transition: 0.5s;\r\n  outline: none;\r\n}\r\n\r\ninput[type=text]:focus {\r\n  border: 3px solid #555;\r\n}\r\n\r\ndiv.v-text-field__details {\r\n  display: none;\r\n}\r\n\r\nlegend.v-label {\r\n  font-size: 16px !important;\r\n}\r\n\r\n.fill {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden\r\n}\r\n.fill img {\r\n    flex-shrink: 0;\r\n    min-width: 100%;\r\n    min-height: 100%\r\n}\r\n\r\n.test-flex-container{\r\n    min-height: 300px;\r\n    margin: 0 auto;\r\n    display: -webkit-flex; /* Safari */     \r\n    display: flex; /* Standard syntax */\r\n}\r\n\r\n.test-flex-container .column{\r\n    padding: 10px;\r\n    -webkit-flex: 1; /* Safari */\r\n    -ms-flex: 1; /* IE 10 */\r\n    flex: 1; /* Standard syntax */\r\n}\r\n\r\n</style>\r\n       \r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./meterRead.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./meterRead.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./meterRead.vue?vue&type=template&id=93579c0c&scoped=true&\"\nimport script from \"./meterRead.vue?vue&type=script&lang=js&\"\nexport * from \"./meterRead.vue?vue&type=script&lang=js&\"\nimport style0 from \"./meterRead.vue?vue&type=style&index=0&id=93579c0c&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"93579c0c\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardActions } from 'vuetify/lib/components/VCard';\nimport { VCardSubtitle } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VDialog } from 'vuetify/lib/components/VDialog';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\nimport { VForm } from 'vuetify/lib/components/VForm';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VRadio } from 'vuetify/lib/components/VRadioGroup';\nimport { VRadioGroup } from 'vuetify/lib/components/VRadioGroup';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSnackbar } from 'vuetify/lib/components/VSnackbar';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\nimport { VTextarea } from 'vuetify/lib/components/VTextarea';\ninstallComponents(component, {VBtn,VCard,VCardActions,VCardSubtitle,VCardText,VCardTitle,VCol,VContainer,VDialog,VDivider,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels,VForm,VIcon,VRadio,VRadioGroup,VRow,VSnackbar,VSpacer,VTextField,VTextarea})\n"],"sourceRoot":""}